name: Node.js CI

# Trigger which git action (push, pull_request)
# in which branch(es) should start the jobs...
on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]

# jobs to run
jobs:
  # build, the name of the job, a server to create and auto configure
  build:
    name: api-test
    # on github actions this comes with MySQL 8.0 :)
    runs-on: ubuntu-latest

    strategy:
      # only testing on Node 18 now but could have done
      # several builds by adding [16.x, 18.x] etc
      matrix:
        node-version: [18.x]

    steps:
      # action from github marketplace, actions
      # checkout this repo on the server
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        # action from github marketplace, actions
        # install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
        # npm ci â‰ˆ read-only from package.json version
        # of npm install -> installs all npm modules
        # mentioned in package.json, preferably during CI
      - run: npm ci
        # start mysql and change default password
        # use the password from your settings.json fil in this repo
     # - run: sudo service mysql start
     # - run: mysqladmin --user=root --password=root password "rootroot"
        # restart mysql
     # - run: sudo service mysql restart
        # seed the db with initial dummy/test data
     # - run: npm run seed-db
        # start the backend / rest-api-server
        # (without blocking the terminal - nohup)
      - run: nohup npm run start &
        # run whatever is specified in package.json
        # for the script test
      - run: npm run api-test




      deploy:
   needs: cypress_tests
   runs-on: ubuntu-latest
   steps:
     - name: executing remote ssh commands using password
       uses: appleboy/ssh-action@v0.1.10
       with:
         host: ${{ secrets.HOST }}
         username: ${{ secrets.USERNAME }}
         password: ${{ secrets.PASSWORD }}
         port: ${{ secrets.PORT }}
         script: |
           cd /var/www/Cypress-cucumber
           git pull
           npm install
           npm run build --if-present
           pm2 restart "pm2 project name"
           pm2 restart reverse-proxy