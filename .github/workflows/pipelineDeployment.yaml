name: CI/CD Pipeline

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main", "dev" ]

jobs:
  api_tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '18'
      - name: Install Newman
        run: npm install -g newman
      - name: Install dependencies
        run: npm ci
      - name: Start the server
        run: nohup npm run start &
      - name: Run API tests
        run: npm run api-test

  cypress_tests:
    needs: api_tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cypress run
        uses: cypress-io/github-action@v2
        with:
           start: nohup npm run start &
           run: cd cypress && npm run test
           wait-on: 'http://localhost:3000'
           wait-on-timeout: 300

  # Deploy to server using SCP
  # deployment:
  # needs: [api_tests, cypress_tests]
  # if: success()
  # runs-on: ubuntu-latest
  # steps:
  #   - uses: actions/checkout@v2
  #   - with:
  #       ref: main
  #   - name: Deploy to Server via SCP
  #     uses: appleboy/scp-action@v0.1.4
  #     with:
  #      host: ${{ secrets.HOST }}
  #      username: ${{ secrets.USERNAME }}
  #      password: ${{ secrets.PASSWORD }}
  #      port: ${{ secrets.PORT }}
  #      source: '*.*'
  #      target: "/var/www/github-actions-example/"



  # Deploy to server using SSH
  #deploy:
  #  needs: [tests]
  #  environment: "Main deploy"
  #
  #  runs-on: ubuntu-latest
  #  steps:
  #    - name: executing remote ssh commands using password
  #      uses: appleboy/ssh-action@v0.1.10
  #      with:
  #        host: ${{ secrets.HOST }}
  #        username: ${{ secrets.USERNAME }}
  #        password: ${{ secrets.PASSWORD }}
  #        port: ${{ secrets.PORT }}
  #        script: |
  #          cd /var/www/Cypress-cucumber
  #          git pull
  #          npm install
  #          npm run build --if-present
  #          #pm2 restart "pm2 project name"
  #          pm2 restart reverse-proxy
